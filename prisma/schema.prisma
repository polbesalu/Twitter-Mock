datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              String    @id @default(cuid())
  name            String?
  email           String    @unique
  image           String?
  bio             String?
  createdAt       DateTime  @default(now())
  tweets          Tweet[]
  likes           Like[]
  retweets        Retweet[]
  sentMessages    Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")
  followers       User[]    @relation("UserFollows")
  following       User[]    @relation("UserFollows")
  followerCount   Int       @default(0)
  followingCount  Int       @default(0)
}

model Tweet {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  likes     Like[]
  retweets  Retweet[]
  replies   Tweet[]  @relation("ReplyTo")
  replyTo   Tweet?   @relation("ReplyTo", fields: [replyToId], references: [id])
  replyToId String?
  hashtags  HashtagOnTweet[]
}

model Like {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  tweet     Tweet    @relation(fields: [tweetId], references: [id])
  tweetId   String

  @@unique([userId, tweetId])
}

model Retweet {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  tweet     Tweet    @relation(fields: [tweetId], references: [id])
  tweetId   String

  @@unique([userId, tweetId])
}

model Hashtag {
  id     String           @id @default(cuid())
  name   String           @unique
  tweets HashtagOnTweet[]
}

model HashtagOnTweet {
  tweet     Tweet   @relation(fields: [tweetId], references: [id])
  tweetId   String
  hashtag   Hashtag @relation(fields: [hashtagId], references: [id])
  hashtagId String

  @@id([tweetId, hashtagId])
}

model Message {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  sender    User     @relation("SentMessages", fields: [senderId], references: [id])
  senderId  String
  receiver  User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
  receiverId String
}

